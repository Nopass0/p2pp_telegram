import { Context } from 'telegraf';
import type { BotContext } from '@/types';
import { KeyboardBuilder } from '../components/keyboard';
import { AuthHandler } from './auth-handler';
import { WorkSessionHandler } from './work-session-handler';
import { AdminService } from '@/services/admin-service';
import { UserService } from '@/services/user-service';
import { WorkSessionService } from '@/services/work-session-service';
import { TransactionService } from '@/services/transaction-service';
import { IDEXService } from '@/services/idex-service';
import { NotificationService } from '@/services/notification-service';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
 */
export class MenuHandler {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: any) {
    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.hears('üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥', AuthHandler.startAuthProcess);
    bot.hears('üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç', this.handleUploadReport);
    bot.hears('‚è∞ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É', WorkSessionHandler.startWorkSession);
    bot.hears('‚èπÔ∏è –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É', WorkSessionHandler.endWorkSession);
    bot.hears('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏', WorkSessionHandler.getSessionInfo);
    bot.hears('üìã –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', this.handleMyStats);
    bot.hears('‚ùì –ü–æ–º–æ—â—å', this.handleHelp);

    // –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    bot.hears('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', this.handleUserManagement);
    bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', this.handleAdminStats);
    bot.hears('üì± IDEX', this.handleIdex);
    // bot.hears('Bybit')
    bot.hears('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', this.handleSettings);
    bot.hears('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', this.handleNotifications);
    bot.hears('üîô –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º', this.switchToUserMode);

    // –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    bot.hears('‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', this.handleAddUser);
    bot.hears('üëÅÔ∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', this.handleUserList);
    bot.hears('üîô –ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏', this.switchToAdminMode);

    // –ú–µ–Ω—é IDEX
    bot.hears('üì± IDEX –ö–∞–±–∏–Ω–µ—Ç—ã', this.handleIdexCabinets);
    bot.hears('‚ûï –î–æ–±–∞–≤–∏—Ç—å IDEX –∫–∞–±–∏–Ω–µ—Ç', this.handleAddIdexCabinet);
    bot.hears('‚ùå –£–¥–∞–ª–∏—Ç—å IDEX –∫–∞–±–∏–Ω–µ—Ç', this.handleDeleteIdexCabinet);
    bot.hears('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–∞–±–∏–Ω–µ—Ç—ã', this.handleSyncAllIdexCabinets);

    // Inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è IDEX
    bot.action(/^idex_page_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const page = parseInt(ctx.match[1]);
      await this.showIdexCabinets(ctx, page);
    });

    bot.action('back_to_admin', async (ctx: BotContext) => {
      await ctx.deleteMessage();
      await this.switchToAdminMode(ctx);
    });

    bot.action('back_to_idex_cabinets', async (ctx: BotContext) => {
      await ctx.deleteMessage();
      await this.showIdexCabinets(ctx, 1);
    });

    bot.action(/^back_to_idex_cabinet_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await ctx.deleteMessage();
      await this.showIdexCabinetActions(ctx, cabinetId);
    });

    bot.action(/^view_idex_cabinet_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.showIdexCabinetActions(ctx, cabinetId);
    });

    bot.action(/^sync_idex_cabinet_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleSyncIdexCabinet(ctx, cabinetId);
    });

    bot.action('sync_all_idex_cabinets', async (ctx: BotContext) => {
      await this.handleSyncAllIdexCabinetsInline(ctx);
    });

    bot.action(/^delete_idex_cabinet_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleDeleteIdexCabinet(ctx, cabinetId);
    });

    bot.action(/^view_idex_transactions_(\d+)_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      const page = parseInt(ctx.match[2]);
      await this.showIdexCabinetTransactions(ctx, cabinetId, page);
    });

    bot.action(/^idex_time_filter_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleIdexTimeFilter(ctx);
    });

    bot.action(/^custom_date_range_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleCustomDateRangeRequest(ctx);
    });

    bot.action(/^view_idex_cabinet_details_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleViewIdexCabinetDetails(ctx);
    });

    bot.action(/^view_idex_transactions_(\d+)_(\d+)_(\w+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      const page = parseInt(ctx.match[2]);
      const timeFilter = ctx.match[3];
      await this.handleViewIdexTransactions(ctx, cabinetId, page, timeFilter);
    });

    bot.action(/^back_to_idex_cabinet_from_transactions_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleBackToIdexCabinet(ctx, cabinetId);
    });

    bot.action(/^view_idex_transactions_(\d+)_(\d+)_(.+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      const page = parseInt(ctx.match[2]);
      const timeFilter = ctx.match[3];
      await this.showIdexCabinetTransactions(ctx, cabinetId, page, timeFilter);
    });

    bot.action(/^idex_time_filter_(\d+)$/, async (ctx: BotContext) => {
      if (!ctx.match) return;
      const cabinetId = parseInt(ctx.match[1]);
      await this.handleIdexTimeFilter(ctx);
    });
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ IDEX
   */
  static async handleIdex(ctx: BotContext) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (!ctx.session?.isAdmin) {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é IDEX
      await ctx.reply('üì± *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.idexMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ–Ω—é IDEX:', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é IDEX. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞
   */
  static async handleUploadReport(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (!ctx.session.userId) {
      await ctx.reply(
        '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è
    const activeSession = await WorkSessionService.getActiveSession(ctx.session.userId);
    
    if (!activeSession) {
      await ctx.reply(
        '‚ö†Ô∏è –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚è∞ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É".',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –æ—Ç—á–µ—Ç–∞
    ctx.session.lastAction = 'waiting_report_type';
    
    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å:',
      KeyboardBuilder.reportTypeKeyboard()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  static async handleMyStats(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (!ctx.session.userId) {
      await ctx.reply(
        '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userId = ctx.session.userId;
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
      const endDate = new Date();
      const startDate = new Date();
      startDate.setDate(startDate.getDate() - 7);
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—á–∏—Ö —Å–µ—Å—Å–∏–π
      const sessionStats = await WorkSessionService.getWorkSessionStats(userId, startDate, endDate);
      
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
      const activeSession = await WorkSessionService.getActiveSession(userId);
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      const transactionStats = await TransactionService.getTransactionStats(userId, startDate, endDate);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      let message = `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name}*\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—á–∏—Ö —Å–µ—Å—Å–∏—è—Ö
      message += `*–†–∞–±–æ—á–∏–µ —Å–µ—Å—Å–∏–∏ (–∑–∞ 7 –¥–Ω–µ–π):*\n`;
      message += `‚Ä¢ –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${sessionStats.totalSessions}\n`;
      message += `‚Ä¢ –û–±—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formatDuration(sessionStats.totalDuration)}\n`;
      message += `‚Ä¢ –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formatDuration(sessionStats.averageDuration)}\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
      if (activeSession) {
        const sessionDuration = Date.now() - new Date(activeSession.startTime).getTime();
        message += `*–¢–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è:*\n`;
        message += `‚Ä¢ –ù–∞—á–∞–ª–æ: ${new Date(activeSession.startTime).toLocaleString('ru-RU')}\n`;
        message += `‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formatDuration(sessionDuration)}\n\n`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
      message += `*–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–∑–∞ 7 –¥–Ω–µ–π):*\n`;
      message += `‚Ä¢ –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactionStats.totalTransactions}\n`;
      message += `‚Ä¢ –ü–æ–∫—É–ø–∫–∏: ${transactionStats.totalBuy}\n`;
      message += `‚Ä¢ –ü—Ä–æ–¥–∞–∂–∏: ${transactionStats.totalSell}\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–∫—Ç–∏–≤–∞–º
      if (transactionStats.assets.length > 0) {
        message += `*–ê–∫—Ç–∏–≤—ã:*\n`;
        for (const asset of transactionStats.assets) {
          message += `‚Ä¢ ${asset.asset}: ${asset.totalAmount.toFixed(8)} (—Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${asset.avgPrice.toFixed(2)})\n`;
        }
        message += '\n';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.mainMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.mainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏
   */
  static async handleHelp(ctx: BotContext) {
    await ctx.reply(
      'P2P Transaction Analyzer Bot Help üìã\n\n' +
      '–≠—Ç–æ—Ç –±–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç CSV —Ñ–∞–π–ª—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π P2P —Ä—ã–Ω–∫–∞.\n\n' +
      '–ö–æ–º–∞–Ω–¥—ã:\n' +
      '/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é\n' +
      '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏\n\n' +
      '–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n' +
      '1. –ü–µ—Ä–µ—à–ª–∏—Ç–µ CSV —Ñ–∞–π–ª –∏–∑ –±–æ—Ç–∞ @wallet\n' +
      '2. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n\n' +
      '–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ë—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ç–æ–ª—å–∫–æ CSV —Ñ–∞–π–ª—ã, –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–µ –∏–∑ –±–æ—Ç–∞ @wallet.',
      ctx.session?.isAdmin ? KeyboardBuilder.adminMainMenu() : KeyboardBuilder.mainMenu()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
   */
  static async handleUserManagement(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    await ctx.reply(
      'üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:',
      KeyboardBuilder.adminUserManagementMenu()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  static async handleAdminStats(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    await ctx.reply(
      'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:',
      KeyboardBuilder.adminStatsMenu()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
   */
  static async handleSettings(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
      const settings = await AdminService.getSystemSettings();
      
      if (!settings) {
        await ctx.reply(
          '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
          KeyboardBuilder.adminMainMenu()
        );
        return;
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
      const settingsMessage = `
‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã*

*–ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:* ${settings.reportReminderInterval} –º–∏–Ω—É—Ç
*–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:* ${settings.reportWaitTime} –º–∏–Ω—É—Ç

–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:
/setReminderInterval [–º–∏–Ω—É—Ç—ã] - –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
/setWaitTime [–º–∏–Ω—É—Ç—ã] - –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
      `;
      
      await ctx.reply(
        settingsMessage, 
        { 
          ...KeyboardBuilder.adminMainMenu(),
          parse_mode: 'Markdown' 
        }
      );
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –º—ã –≤ —Ä–µ–∂–∏–º–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
      ctx.session.settingsMode = true;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  static async handleNotifications(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const notificationTypes = [
        { id: 'session_start', name: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏' },
        { id: 'session_end', name: '–û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏' },
        { id: 'new_transaction', name: '–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è' },
        { id: 'report_reminder', name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ—Ç—á–µ—Ç–µ' }
      ];
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const settings = await NotificationService.getNotificationSettings();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      let notificationMessage = '‚ö†Ô∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏*\n\n';
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º —Ç–∏–ø–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      for (const type of notificationTypes) {
        const isEnabled = settings[type.id]?.enabled || false;
        const statusText = isEnabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ';
        
        notificationMessage += `*${type.name}*: ${statusText}\n`;
        notificationMessage += `–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å: /toggle_notification_${type.id}\n\n`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      notificationMessage += '*–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:*\n';
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
      const admins = await AdminService.getAllAdmins();
      
      if (admins.length > 0) {
        for (const admin of admins) {
          const name = admin.firstName || admin.username || admin.telegramId;
          notificationMessage += `- ${name}\n`;
        }
      } else {
        notificationMessage += '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n';
      }
      
      await ctx.reply(
        notificationMessage,
        { 
          ...KeyboardBuilder.adminMainMenu(),
          parse_mode: 'Markdown' 
        }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  static async handleAddUser(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await ctx.reply(
      '‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n' +
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
      { 
        ...KeyboardBuilder.adminUserManagementMenu(),
        parse_mode: 'Markdown' 
      }
    );
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ctx.session.waitingForUserName = true;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  static async handleUserList(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await UserService.getAllUsers();
      
      if (users.length === 0) {
        await ctx.reply(
          'üëÅÔ∏è *–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π*\n\n' +
          '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –º–µ–Ω—é "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è".',
          { 
            ...KeyboardBuilder.adminUserManagementMenu(),
            parse_mode: 'Markdown' 
          }
        );
        return;
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      let userListMessage = 'üëÅÔ∏è *–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π*\n\n';
      
      for (const user of users) {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç–æ–≤
        const telegramAccounts = user.telegramAccounts || [];
        const activeAccounts = telegramAccounts.filter(account => account.userId === user.id);
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
        const lastSession = user.workSessions && user.workSessions.length > 0 
          ? user.workSessions[0] 
          : null;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        userListMessage += `*ID:* ${user.id} | *–ò–º—è:* ${user.name}\n`;
        userListMessage += `*–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞:* ${user.passCode}\n`;
        userListMessage += `*–°—Ç–∞—Ç—É—Å:* ${user.isActive ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n`;
        userListMessage += `*–ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:* ${activeAccounts.length}\n`;
        
        if (lastSession) {
          const sessionDate = new Date(lastSession.startTime).toLocaleDateString('ru-RU');
          userListMessage += `*–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è:* ${sessionDate}\n`;
        }
        
        userListMessage += '\n';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
      userListMessage += '*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:*\n';
      userListMessage += '/user_info [ID] - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n';
      userListMessage += '/regenerate_code [ID] - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞\n';
      userListMessage += '/toggle_active [ID] - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n';
      
      await ctx.reply(
        userListMessage,
        { 
          ...KeyboardBuilder.adminUserManagementMenu(),
          parse_mode: 'Markdown' 
        }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminUserManagementMenu()
      );
    }
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  static async switchToUserMode(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    await ctx.reply(
      '–í—ã –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ —Ä–µ–∂–∏–º –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
      KeyboardBuilder.mainMenu()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  static async switchToAdminMode(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    await ctx.reply(
      '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
      KeyboardBuilder.adminMainMenu()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤
   */
  static async handleIdexCabinets(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    await MenuHandler.showIdexCabinets(ctx, 1);
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   * @param page –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  static async showIdexCabinets(ctx: BotContext, page: number) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
      const result = await IDEXService.getAllCabinets(page);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–æ–≤
      let message = 'üì± *IDEX –ö–∞–±–∏–Ω–µ—Ç—ã*\n\n';
      
      if (result.cabinets.length > 0) {
        result.cabinets.forEach((cabinet, index) => {
          message += `*${index + 1}.* ID: ${cabinet.id}\n`;
          message += `   IDEX ID: ${cabinet.idexId}\n`;
          message += `   –õ–æ–≥–∏–Ω: ${cabinet.login}\n`;
          message += `   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${cabinet._count.transactions}\n`;
          message += `   –î–æ–±–∞–≤–ª–µ–Ω: ${new Date(cabinet.createdAt).toLocaleDateString('ru-RU')}\n\n`;
        });
      } else {
        message += '–ö–∞–±–∏–Ω–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∫–∞–±–∏–Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç".\n\n';
      }
      
      message += `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${result.currentPage} –∏–∑ ${result.totalPages}\n`;
      message += `–í—Å–µ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: ${result.totalCount}`;
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏
      const keyboard = KeyboardBuilder.idexCabinetKeyboard(result.currentPage, result.totalPages, result.cabinets);
      
      await ctx.reply(message, { 
        parse_mode: 'Markdown',
        ...keyboard
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   */
  static async handleAddIdexCabinet(ctx: BotContext) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!ctx.session) {
      ctx.session = {};
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!ctx.session.isAdmin) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏
    ctx.session.idexCabinetData = {};
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è IDEX ID
    ctx.session.idexCabinetStep = 'waiting_idex_id';
    
    await ctx.reply(
      'üì± *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞*\n\n' +
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):',
      { 
        parse_mode: 'Markdown',
        ...KeyboardBuilder.cancelKeyboard()
      }
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX
   */
  static async handleIdexCabinetId(ctx: BotContext, text: string) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    if (!/^\d+$/.test(text)) {
      await ctx.reply(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –¥–ª—è ID –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX:',
        KeyboardBuilder.cancelKeyboard()
      );
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.idexCabinetData = {
      ...ctx.session.idexCabinetData,
      idexId: parseInt(text, 10)
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞
    ctx.session.idexCabinetStep = 'waiting_login';
    
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX:',
      KeyboardBuilder.cancelKeyboard()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞ –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX
   */
  static async handleIdexCabinetLogin(ctx: BotContext, text: string) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.idexCabinetData = {
      ...ctx.session.idexCabinetData,
      login: text
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è
    ctx.session.idexCabinetStep = 'waiting_password';
    
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX:',
      KeyboardBuilder.cancelKeyboard()
    );
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX
   */
  static async handleIdexCabinetPassword(ctx: BotContext, text: string) {
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –≤ –¥–∞–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–∞
      ctx.session.idexCabinetData = {
        ...ctx.session.idexCabinetData,
        password: text
      };
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      if (ctx.session.idexCabinetData.idexId === undefined || !ctx.session.idexCabinetData.login || !ctx.session.idexCabinetData.password) {
        await ctx.reply(
          '‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ.',
          KeyboardBuilder.adminMainMenu()
        );
        return;
      }
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ –ë–î
      const { idexId, login, password } = ctx.session.idexCabinetData;
      
      await IDEXService.createCabinet(idexId, login, password);
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
      delete ctx.session.idexCabinetData;
      delete ctx.session.idexCabinetStep;
      
      await ctx.reply(
        '‚úÖ IDEX –∫–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!',
        KeyboardBuilder.adminMainMenu()
      );
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
      await MenuHandler.showIdexCabinets(ctx, 1);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   */
  static async handleDeleteIdexCabinet(ctx: BotContext, cabinetId: number) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞
      const cabinet = await IDEXService.getCabinetById(cabinetId);
      
      if (!cabinet) {
        await ctx.reply(
          '–ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω.',
          KeyboardBuilder.adminMainMenu()
        );
        return;
      }
      
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
      await ctx.reply(
        `‚ùì –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å IDEX –∫–∞–±–∏–Ω–µ—Ç ID ${cabinetId}?`,
        KeyboardBuilder.confirmationKeyboard('delete_idex', cabinetId)
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —É–¥–∞–ª–µ–Ω–∏—è IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —É–¥–∞–ª–µ–Ω–∏—è IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   */
  static async handleConfirmDeleteIdexCabinet(ctx: BotContext, cabinetId: number) {
    try {
      // –£–¥–∞–ª—è–µ–º –∫–∞–±–∏–Ω–µ—Ç
      await IDEXService.deleteCabinet(cabinetId);
      
      await ctx.reply(
        '‚úÖ IDEX –∫–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!',
        KeyboardBuilder.adminMainMenu()
      );
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
      await MenuHandler.showIdexCabinets(ctx, 1);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.adminMainMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤
   */
  static async handleSyncAllIdexCabinets(ctx: BotContext) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (!ctx.session?.isAdmin) {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      const message = await ctx.reply('üîÑ –ù–∞—á–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      await IDEXService.syncAllCabinetsTransactions();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await ctx.reply('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', 
        KeyboardBuilder.idexMenu()
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É
   */
  static async handleSyncAllIdexCabinetsInline(ctx: BotContext) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (!ctx.session?.isAdmin) {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await ctx.editMessageText('üîÑ –ù–∞—á–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      await IDEXService.syncAllCabinetsTransactions();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await ctx.editMessageText('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', {
        ...KeyboardBuilder.idexCabinetKeyboard(1, 1)
      });
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
      await this.showIdexCabinets(ctx, 1);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   */
  static async handleSyncIdexCabinet(ctx: BotContext, cabinetId: number) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (!ctx.session?.isAdmin) {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await ctx.editMessageText('üîÑ –ù–∞—á–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      await IDEXService.syncCabinetTransactionsById(cabinetId);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–±–∏–Ω–µ—Ç–µ
      await this.showIdexCabinetActions(ctx, cabinetId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–±–∏–Ω–µ—Ç–µ IDEX –∏ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º
   */
  static async showIdexCabinetActions(ctx: BotContext, cabinetId: number) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–±–∏–Ω–µ—Ç–µ
      const cabinet = await IDEXService.getCabinetById(cabinetId);
      
      if (!cabinet) {
        await ctx.reply(
          '–ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω.',
          KeyboardBuilder.adminMainMenu()
        );
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      const { totalCount } = await IDEXService.getCabinetTransactions(cabinetId, 1, 1);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const message = `
üì± *IDEX –ö–∞–±–∏–Ω–µ—Ç #${cabinet.id}*

*ID –≤ —Å–∏—Å—Ç–µ–º–µ IDEX:* ${cabinet.idexId}
*–õ–æ–≥–∏–Ω:* \`${cabinet.login}\`
*–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–∞–∑–µ:* ${totalCount}

_–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:_
      `;
      
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –µ–≥–æ
      if (ctx.callbackQuery) {
        await ctx.editMessageText(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.idexCabinetActionsKeyboard(cabinetId)
        });
      } else {
        // –ò–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.idexCabinetActionsKeyboard(cabinetId)
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–±–∏–Ω–µ—Ç–µ IDEX:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–±–∏–Ω–µ—Ç–µ IDEX. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   */
  static async handleSyncIdexCabinet(ctx: BotContext, cabinetId: number) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (!ctx.session?.isAdmin) {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await ctx.editMessageText('üîÑ –ù–∞—á–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      await IDEXService.syncCabinetTransactionsById(cabinetId);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–±–∏–Ω–µ—Ç–µ
      await this.showIdexCabinetActions(ctx, cabinetId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   * @param cabinetId ID –∫–∞–±–∏–Ω–µ—Ç–∞
   * @param page –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   * @param timeFilter –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏
   */
  static async showIdexCabinetTransactions(
    ctx: BotContext, 
    cabinetId: number, 
    page: number = 1, 
    timeFilter: string = 'all'
  ): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–±–∏–Ω–µ—Ç–µ
      const cabinet = await IDEXService.getCabinetById(cabinetId);
      
      if (!cabinet) {
        await ctx.reply(
          '–ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω.',
          KeyboardBuilder.idexMenu()
        );
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
      const perPage = 5;
      const { transactions, totalCount, totalPages, currentPage } = await IDEXService.getCabinetTransactions(
        cabinetId, 
        page, 
        perPage,
        timeFilter !== 'all' ? { preset: timeFilter as "last12h" | "last24h" | "today" | "yesterday" | "thisWeek" | "last2days" | "thisMonth" } : undefined
      );
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
      let message = `
üì± *IDEX –ö–∞–±–∏–Ω–µ—Ç: ${cabinet.name || cabinet.login}*
      `;

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–µ, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      if (timeFilter !== 'all') {
        let filterInfo = '';
        switch (timeFilter) {
          case 'last12h':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤';
            break;
          case 'last24h':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞';
            break;
          case 'today':
            filterInfo = '–∑–∞ —Å–µ–≥–æ–¥–Ω—è';
            break;
          case 'yesterday':
            filterInfo = '–∑–∞ –≤—á–µ—Ä–∞';
            break;
          case 'last2days':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è';
            break;
          case 'thisWeek':
            filterInfo = '–∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é';
            break;
          case 'thisMonth':
            filterInfo = '–∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü';
            break;
          default:
            // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω, —Ç–æ timeFilter –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞—Ç—ã
            if (timeFilter.includes('_')) {
              const [startDate, endDate] = timeFilter.split('_').map(date => 
                new Date(parseInt(date)).toLocaleString('ru-RU', { 
                  day: '2-digit', 
                  month: '2-digit', 
                  year: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                })
              );
              filterInfo = `—Å ${startDate} –ø–æ ${endDate}`;
            }
        }
        
        if (filterInfo) {
          message += `\nüìÜ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ${filterInfo}`;
        }
      } else {
        message += `\nüìÜ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—Å–µ`;
      }
      
      if (transactions.length === 0) {
        message += '\n\n‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      if (transactions.length > 0) {
        message += '\n\n';
        for (let i = 0; i < transactions.length; i++) {
          const tx = transactions[i];
          
          // –ü–∞—Ä—Å–∏–º –æ–±—ä–µ–∫—Ç —Å—É–º–º—ã –∏–∑ JSON
          let amountStr = '–ù/–î';
          let totalUsdtStr = '';
          
          try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è amount (RUB)
            if (typeof tx.amount === 'string') {
              try {
                const amountObj = JSON.parse(tx.amount);
                if (amountObj.trader && amountObj.trader['643']) {
                  amountStr = `${amountObj.trader['643']} RUB`;
                }
              } catch (e) {
                amountStr = '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞';
              }
            } else if (tx.amount && typeof tx.amount === 'object') {
              if (tx.amount.trader && tx.amount.trader['643']) {
                amountStr = `${tx.amount.trader['643']} RUB`;
              }
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è total (USDT)
            if (typeof tx.total === 'string') {
              try {
                const totalObj = JSON.parse(tx.total);
                if (totalObj.trader && totalObj.trader['000001']) {
                  totalUsdtStr = `${totalObj.trader['000001']} USDT`;
                }
              } catch (e) {
                totalUsdtStr = '';
              }
            } else if (tx.total && typeof tx.total === 'object') {
              if (tx.total.trader && tx.total.trader['000001']) {
                totalUsdtStr = `${tx.total.trader['000001']} USDT`;
              }
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—É–º–º:', e);
          }

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
          let dateStr = '–ù/–î';
          try {
            if (tx.createdAtExternal) {
              dateStr = new Date(tx.createdAtExternal).toLocaleString('ru-RU', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
              });
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:', e);
          }

          message += `
*${i + 1}.* ID: \`${tx.externalId || '–ù/–î'}\`
üìÖ –î–∞—Ç–∞: \`${dateStr}\`
üí∞ –°—É–º–º–∞: \`${amountStr}\`${totalUsdtStr ? `\nüíµ USDT: \`${totalUsdtStr}\`` : ''}
‚úÖ –°—Ç–∞—Ç—É—Å: \`${tx.status || '–ù/–î'}\`
          `;
        }
      }
      
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫—É, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –µ–≥–æ
      if (ctx.callbackQuery) {
        await ctx.editMessageText(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.idexTransactionsPaginationKeyboard(
            cabinetId, 
            currentPage, 
            totalPages,
            timeFilter // –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏
          )
        });
      } else {
        // –ò–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.idexTransactionsPaginationKeyboard(
            cabinetId, 
            currentPage, 
            totalPages,
            timeFilter // –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏
          )
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π IDEX –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π IDEX –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.idexMenu()
      );
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π IDEX –ø–æ –≤—Ä–µ–º–µ–Ω–∏
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   */
  static async handleIdexTimeFilter(ctx: BotContext): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
      const cabinetId = parseInt(ctx.match![1]);
      
      await ctx.editMessageText(
        'üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:',
        { reply_markup: KeyboardBuilder.idexTimeFilterKeyboard(cabinetId) }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   */
  static async handleCustomDateRangeRequest(ctx: BotContext): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
      const cabinetId = parseInt(ctx.match![1]);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–±–∏–Ω–µ—Ç–∞ –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      if (!ctx.session) ctx.session = {};
      ctx.session.currentIdexCabinetId = cabinetId;
      ctx.session.awaitingCustomDateRange = true;
      
      await ctx.editMessageText(
        'üìÜ –í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n' +
        '–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú - –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú\n\n' +
        '–ü—Ä–∏–º–µ—Ä: 01.01.2023 00:00 - 02.01.2023 23:59',
        { reply_markup: KeyboardBuilder.cancelInputKeyboard(`back_to_idex_cabinet_${cabinetId}`) }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç.');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π IDEX –∫–∞–±–∏–Ω–µ—Ç–∞
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   */
  static async handleViewIdexCabinetDetails(ctx: BotContext): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
      const cabinetId = parseInt(ctx.match![1]);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥
      const cabinetDetails = await IDEXService.getCabinetDetails(cabinetId);
      
      if (!cabinetDetails || !cabinetDetails.cabinet) {
        await ctx.editMessageText('‚ùå –ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.', { 
          reply_markup: KeyboardBuilder.idexCabinetKeyboard(1, 1) 
        });
        return;
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—è–º–∏ –∫–∞–±–∏–Ω–µ—Ç–∞
      const message = `
üì± *–î–µ—Ç–∞–ª–∏ IDEX –∫–∞–±–∏–Ω–µ—Ç–∞*
      
*ID*: \`${cabinetDetails.cabinet.id || '–ù/–î'}\`
*–õ–æ–≥–∏–Ω:* \`${cabinetDetails.cabinet.login || '–ù/–î'}\`
*–ù–∞–∑–≤–∞–Ω–∏–µ:* \`${cabinetDetails.cabinet.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\`
*–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:* \`${cabinetDetails.stats.totalTransactions || 0}\`
*–ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:* \`${cabinetDetails.stats.lastTransactionDate ? new Date(cabinetDetails.stats.lastTransactionDate).toLocaleString('ru-RU') : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\`
*–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:* \`${cabinetDetails.cabinet.createdAt ? new Date(cabinetDetails.cabinet.createdAt).toLocaleString('ru-RU') : '–ù/–î'}\`
*–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:* \`${cabinetDetails.cabinet.updatedAt ? new Date(cabinetDetails.cabinet.updatedAt).toLocaleString('ru-RU') : '–ù/–î'}\`
      `;
      
      await ctx.editMessageText(message, { 
        parse_mode: 'Markdown',
        reply_markup: KeyboardBuilder.idexCabinetActionsKeyboard(cabinetId) 
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–±–∏–Ω–µ—Ç–∞:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–µ—Ç–∞–ª–µ–π –∫–∞–±–∏–Ω–µ—Ç–∞.');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π IDEX –∫–∞–±–∏–Ω–µ—Ç–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   */
  static async handleViewIdexTransactions(ctx: BotContext): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback
      const [cabinetId, page, timeFilter] = [
        parseInt(ctx.match![1]), 
        parseInt(ctx.match![2]), 
        ctx.match![3] || 'all'
      ];
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–∞–±–∏–Ω–µ—Ç
      const cabinet = await IDEXService.getCabinetById(cabinetId);
      
      if (!cabinet) {
        await ctx.editMessageText('‚ùå –ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.', { 
          reply_markup: KeyboardBuilder.idexCabinetKeyboard(1, 1) 
        });
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏
      const perPage = 5;
      const result = await IDEXService.getCabinetTransactions(
        cabinetId, 
        page, 
        perPage,
        timeFilter !== 'all' ? { preset: timeFilter as "last12h" | "last24h" | "today" | "yesterday" | "thisWeek" | "last2days" | "thisMonth" } : undefined
      );
      
      const totalPages = Math.ceil(result.totalCount / perPage) || 1;
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      let message = `
üì± *IDEX –ö–∞–±–∏–Ω–µ—Ç: ${cabinet.name || cabinet.login}*
      `;

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–µ, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      if (timeFilter !== 'all') {
        let filterInfo = '';
        switch (timeFilter) {
          case 'last12h':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 —á–∞—Å–æ–≤';
            break;
          case 'last24h':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞';
            break;
          case 'today':
            filterInfo = '–∑–∞ —Å–µ–≥–æ–¥–Ω—è';
            break;
          case 'yesterday':
            filterInfo = '–∑–∞ –≤—á–µ—Ä–∞';
            break;
          case 'last2days':
            filterInfo = '–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è';
            break;
          case 'thisWeek':
            filterInfo = '–∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é';
            break;
          case 'thisMonth':
            filterInfo = '–∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü';
            break;
          default:
            // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω, —Ç–æ timeFilter –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞—Ç—ã
            if (timeFilter.includes('_')) {
              const [startDate, endDate] = timeFilter.split('_').map(date => 
                new Date(parseInt(date)).toLocaleString('ru-RU', { 
                  day: '2-digit', 
                  month: '2-digit', 
                  year: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                })
              );
              filterInfo = `—Å ${startDate} –ø–æ ${endDate}`;
            }
        }
        
        if (filterInfo) {
          message += `\nüìÜ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ${filterInfo}`;
        }
      } else {
        message += `\nüìÜ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—Å–µ`;
      }
      
      if (result.transactions.length === 0) {
        message += '\n\n‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      if (result.transactions.length > 0) {
        message += '\n\n';
        result.transactions.forEach((tx, index) => {
          // –ü–∞—Ä—Å–∏–º –æ–±—ä–µ–∫—Ç —Å—É–º–º—ã –∏–∑ JSON
          let amountStr = '–ù/–î';
          let totalUsdtStr = '';
          
          try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è amount (RUB)
            if (typeof tx.amount === 'string') {
              try {
                const amountObj = JSON.parse(tx.amount);
                if (amountObj.trader && amountObj.trader['643']) {
                  amountStr = `${amountObj.trader['643']} RUB`;
                }
              } catch (e) {
                amountStr = '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞';
              }
            } else if (tx.amount && typeof tx.amount === 'object') {
              if (tx.amount.trader && tx.amount.trader['643']) {
                amountStr = `${tx.amount.trader['643']} RUB`;
              }
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è total (USDT)
            if (typeof tx.total === 'string') {
              try {
                const totalObj = JSON.parse(tx.total);
                if (totalObj.trader && totalObj.trader['000001']) {
                  totalUsdtStr = `${totalObj.trader['000001']} USDT`;
                }
              } catch (e) {
                totalUsdtStr = '';
              }
            } else if (tx.total && typeof tx.total === 'object') {
              if (tx.total.trader && tx.total.trader['000001']) {
                totalUsdtStr = `${tx.total.trader['000001']} USDT`;
              }
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—É–º–º:', e);
          }

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
          let dateStr = '–ù/–î';
          try {
            if (tx.createdAtExternal) {
              dateStr = new Date(tx.createdAtExternal).toLocaleString('ru-RU', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
              });
            }
          } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:', e);
          }

          message += `
*${index + 1}.* ID: \`${tx.externalId || '–ù/–î'}\`
üìÖ –î–∞—Ç–∞: \`${dateStr}\`
üí∞ –°—É–º–º–∞: \`${amountStr}\`${totalUsdtStr ? `\nüíµ USDT: \`${totalUsdtStr}\`` : ''}
‚úÖ –°—Ç–∞—Ç—É—Å: \`${tx.status || '–ù/–î'}\`
          `;
        });
      }
      
      await ctx.editMessageText(message, { 
        parse_mode: 'Markdown',
        reply_markup: KeyboardBuilder.idexTransactionsPaginationKeyboard(
          cabinetId, 
          page, 
          totalPages,
          timeFilter
        ) 
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞–±–∏–Ω–µ—Ç—É IDEX –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
   * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
   */
  static async handleBackToIdexCabinet(ctx: BotContext): Promise<void> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
      const cabinetId = parseInt(ctx.match![1]);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–∞–±–∏–Ω–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥
      const cabinet = await IDEXService.getCabinetById(cabinetId);
      
      if (!cabinet) {
        await ctx.editMessageText('‚ùå –ö–∞–±–∏–Ω–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.', { 
          reply_markup: KeyboardBuilder.idexCabinetKeyboard(1, 1) 
        });
        return;
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–±–∏–Ω–µ—Ç–µ
      const message = `
üì± *IDEX –ö–∞–±–∏–Ω–µ—Ç*
      
*ID*: \`${cabinet.id}\`
*–õ–æ–≥–∏–Ω:* \`${cabinet.login}\`
*–ù–∞–∑–≤–∞–Ω–∏–µ:* \`${cabinet.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\`
      `;
      
      await ctx.editMessageText(message, { 
        parse_mode: 'Markdown',
        reply_markup: KeyboardBuilder.idexCabinetActionsKeyboard(cabinetId) 
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –∫–∞–±–∏–Ω–µ—Ç—É:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –∫–∞–±–∏–Ω–µ—Ç—É.');
    }
  }
}

function formatDuration(duration: number) {
  const hours = Math.floor(duration / 3600);
  const minutes = Math.floor((duration % 3600) / 60);
  const seconds = duration % 60;
  
  return `${hours} —á ${minutes} –º–∏–Ω ${seconds} —Å–µ–∫`;
}
