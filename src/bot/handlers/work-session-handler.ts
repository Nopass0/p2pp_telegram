import { Context } from 'telegraf';
import { BotContext } from '@/types';
import { WorkSessionService } from '@/services/work-session-service';
import { KeyboardBuilder } from '../components/keyboard';
import { IDEXService } from '@/services/idex-service';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–±–æ—á–∏—Ö —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export class WorkSessionHandler {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: any) {
    // –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏
    bot.hears('‚è∞ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É', this.startWorkSession);
    
    // –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏
    bot.hears('‚èπÔ∏è –ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É', this.endWorkSession);

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    bot.hears('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏', this.getSessionInfo);

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    bot.hears(['–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ', 'Yes', '–î–∞'], this.confirmCabinets);
    bot.hears(['–ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ', 'No', '–ù–µ—Ç'], this.reenterCabinets);
    
    // Message handler –¥–ª—è –≤–≤–æ–¥–∞ idexId –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    bot.on('message', async (ctx, next) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –∏ –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
      if (ctx.message && 'text' in ctx.message && ctx.session?.waitingForCabinetIds) {
        await this.handleCabinetIdsInput(ctx);
      } else {
        // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
        await next();
      }
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏, –∞–∫—Ç–∏–≤–Ω—ã–µ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤, –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    this.checkAndCloseInactiveSessions();

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –∫–∞–∂–¥—ã–π —á–∞—Å
    setInterval(this.checkAndCloseInactiveSessions, 60 * 60 * 1000);
  }
  
  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏
   */
  private static async startWorkSession(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session?.userId) {
      await ctx.reply('–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
    const activeSession = await WorkSessionService.getActiveSession(ctx.session.userId);
    
    // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    if (activeSession) {
      const startTime = new Date(activeSession.startTime);
      const now = new Date();
      const durationMs = now.getTime() - startTime.getTime();
      const hours = Math.floor(durationMs / (1000 * 60 * 60));
      const minutes = Math.floor((durationMs % (1000 * 60 * 60)) / (1000 * 60));
      
      await ctx.reply(
        `–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è!\n\n–ù–∞—á–∞—Ç–∞: ${startTime.toLocaleString('ru-RU')}\n–¢–µ–∫—É—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${hours} —á. ${minutes} –º–∏–Ω.`,
        KeyboardBuilder.mainMenu()
      );
      return;
    }
    
    // –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –±—É–¥–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 123, 456, 789',
      KeyboardBuilder.cancelKeyboard()
    );
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    ctx.session.waitingForCabinetIds = true;
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
   */
  private static async handleCabinetIdsInput(ctx: BotContext) {
    if (!ctx.message || !('text' in ctx.message)) {
      return;
    }

    const text = ctx.message.text;
    
    // –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ –∑–∞–ø—è—Ç—ã–º –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
    const cabinetIdStrings = text.split(',').map(id => id.trim()).filter(id => id);
    
    if (cabinetIdStrings.length === 0) {
      await ctx.reply(
        '–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ ID –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.',
        KeyboardBuilder.cancelKeyboard()
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ ID - —á–∏—Å–ª–∞
    const invalidIds = cabinetIdStrings.filter(id => !/^\d+$/.test(id));
    if (invalidIds.length > 0) {
      await ctx.reply(
        `–°–ª–µ–¥—É—é—â–∏–µ ID —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã: ${invalidIds.join(', ')}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.`,
        KeyboardBuilder.cancelKeyboard()
      );
      return;
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
    const cabinetIds = cabinetIdStrings.map(id => parseInt(id, 10));
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–∞–±–∏–Ω–µ—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏—Ö idexId
    const cabinets = await IDEXService.findCabinetsByIdexIds(cabinetIds);
    
    if (cabinets.length === 0) {
      await ctx.reply(
        '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ IDEX —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
        KeyboardBuilder.cancelKeyboard()
      );
      return;
    }
    
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ –≤—Å–µ –∫–∞–±–∏–Ω–µ—Ç—ã, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (cabinets.length < cabinetIds.length) {
      const foundIds = cabinets.map(cabinet => cabinet.idexId);
      const notFoundIds = cabinetIds.filter(id => !foundIds.includes(id));
      
      await ctx.reply(
        `–í–Ω–∏–º–∞–Ω–∏–µ! –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–±–∏–Ω–µ—Ç—ã: ${notFoundIds.join(', ')}\n\n–ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã.`
      );
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    let message = '–ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–±–∏–Ω–µ—Ç—ã IDEX:\n\n';
    
    cabinets.forEach((cabinet, index) => {
      message += `${index + 1}. ID: ${cabinet.idexId}, –õ–æ–≥–∏–Ω: ${cabinet.login}\n`;
    });
    
    message += '\n–í—Å–µ –≤–µ—Ä–Ω–æ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é —Å —ç—Ç–∏–º–∏ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏.';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    ctx.session.foundCabinets = cabinets;
    
    // –£–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    ctx.session.waitingForCabinetIds = false;
    ctx.session.waitingForCabinetConfirmation = true;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await ctx.reply(
      message,
      {
        reply_markup: {
          keyboard: [['–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ', '–ù–µ—Ç, –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ']],
          resize_keyboard: true,
          one_time_keyboard: true
        }
      }
    );
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é
   */
  private static async confirmCabinets(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –µ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã
    if (!ctx.session?.waitingForCabinetConfirmation || !ctx.session?.foundCabinets || !ctx.session?.userId) {
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º ID –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    const cabinetIds = ctx.session.foundCabinets.map(cabinet => cabinet.id);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é, —Å–≤—è–∑—ã–≤–∞—è –µ–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏
    const session = await WorkSessionService.startWorkSession(ctx.session.userId, cabinetIds);
    
    if (!session) {
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –Ω–∞—á–∞–ª–µ —Å–µ—Å—Å–∏–∏
    let message = `–†–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞!\n\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ${new Date(session.startTime).toLocaleString('ru-RU')}\n`;
    
    if (session.idexCabinets && session.idexCabinets.length > 0) {
      message += '\n–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã IDEX:\n';
      session.idexCabinets.forEach((cabinet, index) => {
        message += `${index + 1}. ID: ${cabinet.idexId}, –õ–æ–≥–∏–Ω: ${cabinet.login}\n`;
      });
    }
    
    message += '\n–í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –æ—Ç—á–µ—Ç—ã.';
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏
    delete ctx.session.waitingForCabinetConfirmation;
    delete ctx.session.foundCabinets;
    
    await ctx.reply(message, KeyboardBuilder.mainMenu());
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑ –æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–≤–µ—Å—Ç–∏ –∫–∞–±–∏–Ω–µ—Ç—ã –∑–∞–Ω–æ–≤–æ
   */
  private static async reenterCabinets(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if (!ctx.session?.waitingForCabinetConfirmation) {
      return;
    }
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏
    delete ctx.session.waitingForCabinetConfirmation;
    delete ctx.session.foundCabinets;
    
    // –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX —Å–Ω–æ–≤–∞
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–∞–±–∏–Ω–µ—Ç–æ–≤ IDEX, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –±—É–¥–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.',
      KeyboardBuilder.cancelKeyboard()
    );
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    ctx.session.waitingForCabinetIds = true;
  }
  
  /**
   * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é
   */
  private static async endWorkSession(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session.userId) {
      await ctx.reply('–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
    const activeSession = await WorkSessionService.getActiveSession(ctx.session.userId);
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    if (!activeSession) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–∞–∂–º–∏—Ç–µ "‚è∞ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É".',
        KeyboardBuilder.mainMenu()
      );
      return;
    }
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
    const session = await WorkSessionService.endWorkSession(ctx.session.userId);
    
    if (!session) {
      await ctx.reply(
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        KeyboardBuilder.mainMenu()
      );
      return;
    }
    
    const startTime = new Date(session.startTime);
    const endTime = new Date(session.endTime);
    const hours = Math.floor(session.duration / 60);
    const minutes = session.duration % 60;
    
    await ctx.reply(
      `–†–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–ù–∞—á–∞–ª–æ: ${startTime.toLocaleString('ru-RU')}\n–û–∫–æ–Ω—á–∞–Ω–∏–µ: ${endTime.toLocaleString('ru-RU')}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${hours} —á. ${minutes} –º–∏–Ω.`,
      KeyboardBuilder.mainMenu()
    );
  }

  /**
   * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
   */
  private static async getSessionInfo(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session.userId) {
      await ctx.reply('–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    const sessionDetails = await WorkSessionService.getActiveSessionDetails(ctx.session.userId);
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    if (!sessionDetails) {
      await ctx.reply(
        '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–∞–∂–º–∏—Ç–µ "‚è∞ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É".',
        KeyboardBuilder.mainMenu()
      );
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–µ—Å—Å–∏–∏
    let message = `
üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏</b>

‚è± <b>–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:</b> ${sessionDetails.formattedStartTime}
üïí <b>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:</b> ${sessionDetails.formattedCurrentTime}

‚åõÔ∏è <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> ${sessionDetails.durationHours} —á. ${sessionDetails.durationMinutes} –º–∏–Ω.

üìù <b>ID —Å–µ—Å—Å–∏–∏:</b> ${sessionDetails.session.id}
`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–∞—Ö IDEX
    if (sessionDetails.session.idexCabinets && sessionDetails.session.idexCabinets.length > 0) {
      message += '\nüì± <b>–ö–∞–±–∏–Ω–µ—Ç—ã IDEX:</b>\n';
      sessionDetails.session.idexCabinets.forEach((cabinet, index) => {
        message += `${index + 1}. ID: ${cabinet.idexId}, –õ–æ–≥–∏–Ω: ${cabinet.login}\n`;
      });
    }

    message += '\n<i>–°–µ—Å—Å–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø–æ—Å–ª–µ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞</i>';
    
    await ctx.reply(message, {
      parse_mode: 'HTML',
      ...KeyboardBuilder.mainMenu()
    });
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ (–±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤)
   */
  private static async checkAndCloseInactiveSessions() {
    try {
      console.log('–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π...');
      const closedCount = await WorkSessionService.autoCloseInactiveSessions();
      
      if (closedCount > 0) {
        console.log(`–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ${closedCount} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π.`);
      } else {
        console.log('–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π:', error);
    }
  }
}