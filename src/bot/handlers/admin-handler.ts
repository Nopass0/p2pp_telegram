import { Telegraf, Markup } from 'telegraf';
import type { BotContext } from '@/types';
import { UserService } from '@/services/user-service';
import { KeyboardBuilder } from '../components/keyboard';
import { TransactionService } from '@/services/transaction-service';

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
 */
export class AdminHandler {
  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±–æ—Ç–∞
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: Telegraf<BotContext>) {
    try {
      console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AdminHandler');
      
      // –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–µ–Ω—é
      bot.command('admin', this.showAdminMenu);
      bot.command('users', this.showUserManagementMenu);
      bot.command('adduser', this.startAddUserProcess);
      
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
      bot.hears('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', this.showUserManagementMenu);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      bot.hears('üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', this.showUserList);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      bot.hears('‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', this.startAddUserProcess);
      
      // –í–æ–∑–≤—Ä–∞—Ç –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      bot.hears('üîô –ù–∞–∑–∞–¥ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏', this.backToAdminMenu);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      bot.hears('üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', this.showGeneralStats);
      bot.hears('üìà –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', this.showActiveUsers);
      bot.hears('üìâ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', this.showInactiveUsers);
      bot.hears('üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', this.showAllTransactions);
      bot.hears('üîô –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é', this.showUserManagementMenu);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏
      bot.hears('‚ùå –û—Ç–º–µ–Ω–∞', this.cancelOperation);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤)
      bot.on('text', async (ctx, next) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Å—Å–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
        if (!ctx.session) ctx.session = {};
          
        // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:', ctx.message.text);
        console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏:', JSON.stringify(ctx.session));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–ª—é—á–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        if (ctx.session.waitingForAddUser || ctx.session.waitingForUserName) {
          console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ');
          return await this.processTextInput(ctx);
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        return next();
      });

      // Inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
      bot.action(/^user_(\d+)$/, this.showUserDetails);
      bot.action(/^delete_(\d+)$/, this.confirmDeleteUser);
      bot.action(/^confirm_delete_(\d+)$/, this.deleteUser);
      bot.action(/^cancel_delete_(\d+)$/, this.cancelDeleteUser);
      bot.action('user_list', this.showUserList);
      bot.action('add_more_users', this.startAddUserProcess);
      bot.action('admin_user_menu', this.showUserManagementMenu);
      bot.action(/^user_stats_(\d+)$/, this.showUserDetailedStats);
      bot.action(/^user_transactions_(\d+)$/, this.showUserTransactions);
      bot.action(/^transactions_date_filter_(\d+)$/, this.showTransactionsDateFilter);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      bot.action(/^user_page_(\d+)$/, (ctx) => this.handleUserListPagination(ctx, parseInt(ctx.match[1])));
      bot.action(/^user_transactions_page_(\d+)_(\d+)$/, this.handleTransactionsPagination);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø—Ä–æ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
      bot.action('current_page', async (ctx) => {
        await ctx.answerCbQuery('–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–π
      bot.catch((err, ctx) => {
        console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ AdminHandler:', err);
        if (ctx.session?.isAdmin) {
          ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', KeyboardBuilder.adminMainMenu());
        }
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AdminHandler:', error);
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  private static async showAdminMenu(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', KeyboardBuilder.adminMainMenu());
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
   */
  private static async showUserManagementMenu(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    delete ctx.session.waitingForAddUser;
    
    await ctx.reply('–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:', KeyboardBuilder.adminUserManagementMenu());
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   */
  private static async backToAdminMenu(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    delete ctx.session.waitingForAddUser;
    
    await ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', KeyboardBuilder.adminMainMenu());
  }

  /**
   * –û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
   */
  private static async cancelOperation(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    delete ctx.session.waitingForAddUser;
    
    await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', KeyboardBuilder.adminUserManagementMenu());
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async startAddUserProcess(ctx: BotContext) {
    try {
      if (!ctx.session) ctx.session = {};
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥–∏
      ctx.session.isAdmin = true;
      ctx.session.waitingForUserName = true;
      ctx.session.creatingUser = true;
      
      console.log('–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è (–ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è):', JSON.stringify(ctx.session));
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –æ—Ç–º–µ–Ω—ã
      const sentMessage = await ctx.reply(
        '‚úèÔ∏è *–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"', 
        {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.cancelKeyboard()
        }
      );
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      if (sentMessage && 'message_id' in sentMessage) {
        ctx.session.lastMessage = sentMessage.message_id;
      }
      
      console.log('–¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è (–ü–û–°–õ–ï –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è):', JSON.stringify(ctx.session));
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
    }
  }
  
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async processTextInput(ctx: BotContext) {
    try {
      if (!ctx.session) ctx.session = {};
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (!ctx.message || !('text' in ctx.message)) {
        return false;
      }
      
      // –í—ã–≤–æ–¥–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('processTextInput –≤—ã–∑–≤–∞–Ω —Å —Ç–µ–∫—Å—Ç–æ–º:', ctx.message.text);
      console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏:', JSON.stringify(ctx.session));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (ctx.session.waitingForUserName && ctx.message.text) {
        console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.message.text);
        const name = ctx.message.text;
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
        if (name === '‚ùå –û—Ç–º–µ–Ω–∞') {
          // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏
          delete ctx.session.waitingForUserName;
          delete ctx.session.creatingUser;
          return await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', KeyboardBuilder.adminUserManagementMenu());
        }
        
        console.log('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–º–µ–Ω–µ–º:', name);
        
        // –°—Ä–∞–∑—É –æ—á–∏—â–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        delete ctx.session.waitingForUserName;
        delete ctx.session.creatingUser;
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try {
          const user = await UserService.createUser(name);
          
          if (user) {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', user);
            
            return await ctx.reply(
              `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${user.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n` +
              `üÜî ID: ${user.id}\n` +
              `üîë –ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞: \`${user.passCode}\`\n\n` +
              `–≠—Ç–æ—Ç –∫–æ–¥ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç–∞.\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
              {
                parse_mode: 'Markdown',
                ...KeyboardBuilder.userActionsAfterCreateKeyboard(user.id)
              }
            );
          } else {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: user —Ä–∞–≤–µ–Ω null');
            return await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
          return await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
        }
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
      return false;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ processTextInput:', error);
      return false;
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   */
  private static async showUserList(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    ctx.session.isAdmin = true;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
    const currentPage = ctx.session.userListPage || 1;
    const pageSize = 5; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
      const result = await UserService.getUsersWithPagination(currentPage, pageSize);
      
      if (result.users.length === 0) {
        return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      let message = `üìã *–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π* (—Å—Ç—Ä. ${currentPage}/${result.totalPages}):\n\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      for (const user of result.users) {
        const telegramInfo = user.telegramAccounts.length > 0 
          ? `‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω –∫ Telegram` 
          : `‚ùå –ù–µ—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –∫ Telegram`;
        
        message += `üë§ *${user.name}* (ID: ${user.id})\n` +
                  `üîë –ö–æ–¥: ${user.passCode}\n` +
                  `${telegramInfo}\n\n`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      message += `–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.totalUsers}`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.userListPaginationKeyboard(result.users, currentPage, result.totalPages)
      });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', KeyboardBuilder.adminUserManagementMenu());
    }
  }
  
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  private static async handleUserListPagination(ctx: BotContext, page: number) {
    if (!ctx.session) ctx.session = {};
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    ctx.session.userListPage = page;
    
    // –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
    await this.showUserList(ctx);
    
    // –£–¥–∞–ª—è–µ–º –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è "Loading..."
    await ctx.answerCbQuery();
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   */
  private static async showUserDetails(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
    const userId = parseInt(ctx.match[1]);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.selectedUserId = userId;
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        await ctx.answerCbQuery('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return await ctx.editMessageText('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      const telegramAccounts = user.telegramAccounts || [];
      let telegramInfo = '';
      
      if (telegramAccounts.length > 0) {
        telegramInfo = '\nüì± *–ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—ã:*\n';
        for (const account of telegramAccounts) {
          const username = account.username ? `@${account.username}` : '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
          const name = account.firstName ? 
            (account.lastName ? `${account.firstName} ${account.lastName}` : account.firstName) : 
            '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
            
          telegramInfo += `- ${username} (${name})\n`;
        }
      } else {
        telegramInfo = '\n‚ùå –ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n';
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const stats = await UserService.getUserStats(userId);
      let statsInfo = '';
      
      if (stats) {
        statsInfo = '\nüìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n' +
          `- –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${stats.totalSessions || 0}\n` +
          `- –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${stats.activeSessions || 0}\n` +
          `- –û–±—â–µ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${stats.totalWorkTime || '0:00'}\n` +
          `- –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${stats.lastActivity || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n`;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { transactions, total } = await TransactionService.getUserTransactions(userId, 1, 5);
      let transactionsInfo = '';
      
      if (transactions && transactions.length > 0) {
        transactionsInfo = '\nüí∞ *–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:*\n';
        for (const tx of transactions) {
          const date = new Date(tx.dateTime).toLocaleString('ru-RU', { 
            day: '2-digit', 
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          });
          
          // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
          const type = tx.type.toUpperCase() === 'BUY' ? 'üî¥ –ü–æ–∫—É–ø–∫–∞' : (tx.type.toUpperCase() === 'SELL' ? 'üü¢ –ü—Ä–æ–¥–∞–∂–∞' : tx.type);
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
          const amount = parseFloat(tx.amount.toString()).toFixed(6);
          const price = parseFloat(tx.totalPrice.toString()).toFixed(2);
          
          transactionsInfo += `${date}: ${type} ${amount} ${tx.asset} - ${price} RUB\n`;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—á–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 5
        if (total > 5) {
          transactionsInfo += `\n_...–∏ –µ—â—ë ${total - 5} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π_\n`;
        }
      } else {
        transactionsInfo = '\nüí∞ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:* –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n';
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const message = `üë§ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:*\n\n` +
        `*${user.name}* (ID: ${user.id})\n` +
        `üîë –ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞: \`${user.passCode}\`\n` +
        `üîÑ –°—Ç–∞—Ç—É—Å: ${user.isActive ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}\n` +
        telegramInfo +
        statsInfo +
        transactionsInfo;
      
      // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const keyboard = KeyboardBuilder.userDetailsKeyboard(user.id, user.isActive);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      if (ctx.callbackQuery) {
        await ctx.editMessageText(message, {
          parse_mode: 'Markdown',
          ...keyboard
        });
        
        await ctx.answerCbQuery();
      } else {
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...keyboard
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error);
      await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      await ctx.editMessageText('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.', 
        KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async confirmDeleteUser(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      const userId = parseInt(ctx.match[1]);
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.', KeyboardBuilder.adminUserManagementMenu());
      }
      
      await ctx.reply(
        `–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${user.name}" (ID: ${user.id})?`,
        KeyboardBuilder.confirmationKeyboard('delete', userId)
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async deleteUser(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      const userId = parseInt(ctx.match[1]);
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const result = await UserService.deleteUser(userId);
      
      if (result) {
        await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${user.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.`, KeyboardBuilder.adminUserManagementMenu());
      } else {
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –û—Ç–º–µ–Ω—è–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async cancelDeleteUser(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    await ctx.reply('–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–º–µ–Ω–µ–Ω–æ.', KeyboardBuilder.adminUserManagementMenu());
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async showUserDetailedStats(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('–ö–æ–Ω—Ç–µ–∫—Å—Ç callback query:', ctx.callbackQuery);
      
      const userId = parseInt(ctx.match[1]);
      console.log('–ü–æ–ª—É—á–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
      
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        await ctx.answerCbQuery('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return await ctx.editMessageText('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const stats = await UserService.getUserDetailedStats(userId);
      
      if (!stats) {
        await ctx.answerCbQuery('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        return await ctx.editMessageText('–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
      let message = `üìä *–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} (ID: ${user.id})*\n\n`;
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π
      message += `*üìÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π:*\n`;
      message += `- –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${stats.totalSessions || 0}\n`;
      message += `- –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${stats.activeSessions || 0}\n`;
      message += `- –û–±—â–µ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${stats.totalWorkTime || '0:00'}\n`;
      
      if (stats.lastActivity) {
        message += `- –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${stats.lastActivity}\n`;
      } else {
        message += `- –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n`;
      }
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
      message += `\n*üìÖ –°–µ—Å—Å–∏–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏:*\n`;
      const dayNames = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
      for (let i = 0; i < 7; i++) {
        message += `- ${dayNames[i]}: ${stats.sessionsByDay[i]}\n`;
      }
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      message += `\n*üí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:*\n`;
      message += `- –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.totalTransactions || 0}\n`;
      message += `- –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: ${stats.totalPurchaseAmount || 0} RUB\n`;
      message += `- –°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂: ${stats.totalSaleAmount || 0} RUB\n`;
      message += `- –ë–∞–ª–∞–Ω—Å: ${stats.transactionBalance || 0} RUB\n`;
      
      // –¢–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç—ã
      message += `\n*üì± –¢–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç—ã:*\n`;
      message += `- –ü—Ä–∏–≤—è–∑–∞–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${stats.telegramAccounts || 0}\n`;
      
      // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π
      const keyboard = [
        [
          Markup.button.callback('üìú –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', `user_transactions_${userId}`),
          Markup.button.callback('üìÖ –§–∏–ª—å—Ç—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π', `transactions_date_filter_${userId}`)
        ],
        [
          Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', `user_${userId}`),
          Markup.button.callback('üîô –ö —Å–ø–∏—Å–∫—É', 'admin_user_list')
        ]
      ];
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      if (ctx.callbackQuery) {
        await ctx.editMessageText(message, {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard(keyboard)
        });
        
        await ctx.answerCbQuery();
      } else {
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard(keyboard)
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async showUserTransactions(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('–ö–æ–Ω—Ç–µ–∫—Å—Ç callback query:', ctx.callbackQuery);
      
      const userId = parseInt(ctx.match[1]);
      console.log('–ü–æ–ª—É—á–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', userId);
      
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        await ctx.answerCbQuery('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return await ctx.editMessageText('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', KeyboardBuilder.adminUserManagementMenu());
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
      const { transactions, total } = await TransactionService.getUserTransactions(userId, 1, 5);
      
      if (!transactions || transactions.length === 0) {
        await ctx.answerCbQuery('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return await ctx.editMessageText(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`, KeyboardBuilder.userDetailsKeyboard(userId, user.isActive));
      }
      
      let message = `üí∞ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} (ID: ${user.id})*:\n\n`;
      
      for (const tx of transactions) {
        const date = new Date(tx.dateTime).toLocaleString('ru-RU', { 
          day: '2-digit', 
          month: '2-digit', 
          year: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        const type = tx.type.toUpperCase() === 'BUY' ? 'üî¥ –ü–æ–∫—É–ø–∫–∞' : (tx.type.toUpperCase() === 'SELL' ? 'üü¢ –ü—Ä–æ–¥–∞–∂–∞' : tx.type);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        const amount = parseFloat(tx.amount.toString()).toFixed(6);
        const price = parseFloat(tx.totalPrice.toString()).toFixed(2);
        
        message += `${date}: ${type} ${amount} ${tx.asset} - ${price} RUB\n`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—á–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 5
      if (total > 5) {
        message += `\n_...–∏ –µ—â—ë ${total - 5} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π_\n`;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      if (ctx.callbackQuery) {
        await ctx.editMessageText(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.transactionsPaginationKeyboard(userId, 1, total)
        });
        await ctx.answerCbQuery();
      } else {
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.transactionsPaginationKeyboard(userId, 1, total)
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async handleTransactionsPagination(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('–ö–æ–Ω—Ç–µ–∫—Å—Ç callback query:', ctx.callbackQuery);
      
      const page = parseInt(ctx.match[1]);
      const userId = parseInt(ctx.match[2]);
      
      console.log(`–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page}, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userId}`);
      
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        await ctx.answerCbQuery('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return await ctx.editMessageText('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', KeyboardBuilder.adminUserManagementMenu());
      }
      
      const { transactions, total } = await TransactionService.getUserTransactions(userId, page, 5);
      
      if (!transactions || transactions.length === 0) {
        await ctx.answerCbQuery('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return await ctx.editMessageText(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`, KeyboardBuilder.userDetailsKeyboard(userId, user.isActive));
      }
      
      let message = `üí∞ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} (—Å—Ç—Ä. ${page}/${Math.ceil(total / 5)})*:\n\n`;
      
      for (const tx of transactions) {
        const date = new Date(tx.dateTime).toLocaleString('ru-RU', { 
          day: '2-digit', 
          month: '2-digit', 
          year: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        const type = tx.type.toUpperCase() === 'BUY' ? 'üî¥ –ü–æ–∫—É–ø–∫–∞' : (tx.type.toUpperCase() === 'SELL' ? 'üü¢ –ü—Ä–æ–¥–∞–∂–∞' : tx.type);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        const amount = parseFloat(tx.amount.toString()).toFixed(6);
        const price = parseFloat(tx.totalPrice.toString()).toFixed(2);
        
        message += `${date}: ${type} ${amount} ${tx.asset} - ${price} RUB\n`;
      }
      
      await ctx.editMessageText(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.transactionsPaginationKeyboard(userId, page, total)
      });
      
      await ctx.answerCbQuery();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  private static async showTransactionsDateFilter(ctx: BotContext) {
    if (!ctx.session) ctx.session = {};
    ctx.session.isAdmin = true;
    
    try {
      const userId = parseInt(ctx.match[1]);
      const user = await UserService.findUserById(userId);
      
      if (!user) {
        return await ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.', KeyboardBuilder.adminUserManagementMenu());
      }
      
      await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', KeyboardBuilder.transactionsDateFilterKeyboard(userId));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–∞–º –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–∞–º –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', KeyboardBuilder.adminUserManagementMenu());
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  private static async showGeneralStats(ctx: BotContext) {
    try {
      if (!ctx.session) ctx.session = {};
      ctx.session.isAdmin = true;
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      const userStats = await UserService.getUserStats();
      const txStats = await TransactionService.getTransactionStats();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
      let message = 'üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n';
      
      message += `üë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Å–µ–≥–æ:* ${userStats.total}\n`;
      message += `‚úÖ *–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:* ${userStats.active}\n`;
      message += `‚ùå *–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:* ${userStats.inactive}\n\n`;
      
      if (txStats) {
        message += `üí∞ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤—Å–µ–≥–æ:* ${txStats.total}\n`;
        message += `üí∏ *–°—É–º–º–∞ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:* ${txStats.totalAmount.toFixed(2)} USD\n`;
        message += `üìÖ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:* ${txStats.lastWeek}\n`;
        message += `üìÖ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:* ${txStats.lastMonth}\n`;
      } else {
        message += 'üí∞ *–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:* –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.adminStatsMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.', KeyboardBuilder.adminStatsMenu());
    }
  }
  
  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  private static async showActiveUsers(ctx: BotContext) {
    try {
      if (!ctx.session) ctx.session = {};
      ctx.session.isAdmin = true;
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await UserService.getActiveUsers();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º
      let message = 'üìà *–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏*\n\n';
      
      if (users && users.length > 0) {
        users.forEach((user, index) => {
          message += `${index + 1}. *${user.name}* (ID: ${user.id})\n`;
          if (user.lastLoginAt) {
            const lastLogin = new Date(user.lastLoginAt);
            message += `   üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: ${lastLogin.toLocaleDateString('ru-RU')}\n`;
          }
          message += '\n';
        });
      } else {
        message += '‚ùå –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.adminStatsMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', KeyboardBuilder.adminStatsMenu());
    }
  }
  
  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  private static async showInactiveUsers(ctx: BotContext) {
    try {
      if (!ctx.session) ctx.session = {};
      ctx.session.isAdmin = true;
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await UserService.getInactiveUsers();
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º
      let message = 'üìâ *–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏*\n\n';
      
      if (users && users.length > 0) {
        users.forEach((user, index) => {
          message += `${index + 1}. *${user.name}* (ID: ${user.id})\n`;
          if (user.createdAt) {
            const createdAt = new Date(user.createdAt);
            message += `   üìÖ –°–æ–∑–¥–∞–Ω: ${createdAt.toLocaleDateString('ru-RU')}\n`;
          }
          message += '\n';
        });
      } else {
        message += '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.adminStatsMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', KeyboardBuilder.adminStatsMenu());
    }
  }
  
  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
   */
  private static async showAllTransactions(ctx: BotContext) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      const txStats = await TransactionService.getTransactionStats();
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      const transactions = await TransactionService.getTransactions({ limit: 10 });
      
      let message = '*üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π*\n\n';
      
      if (txStats) {
        message += `*–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:* ${txStats.total}\n`;
        message += `*–û–±—â–∞—è —Å—É–º–º–∞:* ${txStats.totalAmount.toFixed(2)} USD\n`;
        message += `*–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:* ${txStats.lastWeek} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n`;
        message += `*–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:* ${txStats.lastMonth} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n\n`;
      }
      
      message += '*–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:*\n\n';
      
      if (transactions && transactions.length > 0) {
        transactions.forEach((tx, index) => {
          const date = tx.createdAt ? new Date(tx.createdAt) : new Date();
          message += `${index + 1}. *${tx.amount.toFixed(2)} USD* (${date.toLocaleDateString('ru-RU')})\n`;
          if (tx.user) {
            message += `   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${tx.user.name}\n`;
          }
          message += '\n';
        });
      } else {
        message += '‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: 'Markdown',
        ...KeyboardBuilder.adminStatsMenu()
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.', KeyboardBuilder.adminStatsMenu());
    }
  }
}
