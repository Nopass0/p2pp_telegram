import { Telegraf } from 'telegraf';
import type { BotContext } from '@/types';
import { NotificationService } from '@/services/notification-service';
import { UserService } from '@/services/user-service';
import { KeyboardBuilder } from '../components/keyboard';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export class ReportHandler {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç—á–µ—Ç–∞–º–∏
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: Telegraf<BotContext>) {
    // –ö–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç"
    bot.hears('üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç', async (ctx) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!ctx.session?.userId) {
          return ctx.reply('–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥-–ø–∞—Ä–æ–ª—å.');
        }

        const userId = ctx.session.userId;

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await UserService.findUserById(userId);
        if (!user) {
          return ctx.reply('–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const pendingNotifications = await NotificationService.getPendingNotificationsForUser(userId);
        
        if (pendingNotifications.length === 0) {
          return ctx.reply(
            'üìù –£ –≤–∞—Å –Ω–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç—á–µ—Ç–æ–≤. ' +
            '–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.',
            KeyboardBuilder.mainMenu()
          );
        }

        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –æ—Ç—á–µ—Ç–∞
        await ctx.reply(
          'üìä *–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞*\n\n' +
          '–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ P2P —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ CSV —Ñ–∞–π–ª –∏–∑ –±–æ—Ç–∞ @wallet.\n\n' +
          '–û—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV.',
          {
            parse_mode: 'Markdown',
            ...KeyboardBuilder.mainMenu()
          }
        );
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞:', error);
        await ctx.reply(
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
          KeyboardBuilder.mainMenu()
        );
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∫–∞–∫ –æ—Ç—á–µ—Ç–∞
    bot.on('document', async (ctx, next) => {
      try {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        if (!ctx.session?.userId) {
          return next();
        }

        const userId = ctx.session.userId;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const pendingNotifications = await NotificationService.getPendingNotificationsForUser(userId);
        
        // –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ—Ç—á–µ—Ç–∞
        if (pendingNotifications.length > 0) {
          const document = ctx.message.document;
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
          if (document && document.file_name && document.file_name.toLowerCase().endsWith('.csv')) {
            await ctx.reply('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–∞...');
            
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–∞
            // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
            for (const notification of pendingNotifications) {
              await NotificationService.markReportReceived(notification.id);
            }
            
            await ctx.reply(
              '‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\n\n' +
              `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${pendingNotifications.length}\n\n` +
              '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞.',
              KeyboardBuilder.mainMenu()
            );
            
            return;
          }
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç—á–µ—Ç –∏–ª–∏ –Ω–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        return next();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞:', error);
        await ctx.reply(
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
          KeyboardBuilder.mainMenu()
        );
      }
    });
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
    bot.command('reports', async (ctx) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!ctx.session?.userId) {
          return ctx.reply('–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥-–ø–∞—Ä–æ–ª—å.');
        }

        const userId = ctx.session.userId;
        
        // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const result = await NotificationService.getUserNotificationHistory(userId, 1, 10);
        
        if (result.notifications.length === 0) {
          return ctx.reply(
            'üìã *–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤*\n\n' +
            '–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤.',
            {
              parse_mode: 'Markdown',
              ...KeyboardBuilder.mainMenu()
            }
          );
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –æ—Ç—á–µ—Ç–æ–≤
        let message = 'üìã *–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—á–µ—Ç–æ–≤*\n\n';
        
        for (const notification of result.notifications) {
          const notificationTime = new Date(notification.notificationTime).toLocaleString('ru-RU');
          
          const status = notification.reportReceived 
            ? `‚úÖ –ü–æ–ª—É—á–µ–Ω (${notification.reportTime ? new Date(notification.reportTime).toLocaleString('ru-RU') : '–≤—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ'})` 
            : '‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω';
          
          message += `‚Ä¢ ${notificationTime}: ${status}\n`;
        }
        
        if (result.totalPages > 1) {
          message += `\n_–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ ${result.notifications.length} –∏–∑ ${result.total} –æ—Ç—á–µ—Ç–æ–≤_`;
        }
        
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.mainMenu()
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤:', error);
        await ctx.reply(
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
          KeyboardBuilder.mainMenu()
        );
      }
    });
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
    bot.command('reportstats', async (ctx) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!ctx.session?.userId) {
          return ctx.reply('–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–¥-–ø–∞—Ä–æ–ª—å.');
        }

        const userId = ctx.session.userId;
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const stats = await NotificationService.getUserReportStats(userId);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        let message = 'üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—á–µ—Ç–æ–≤*\n\n';
        message += `–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç—á–µ—Ç–æ–≤: ${stats.total}\n`;
        message += `–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: ${stats.received} (${stats.receivedPercentage.toFixed(2)}%)\n`;
        message += `–ü—Ä–æ–ø—É—â–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: ${stats.missed} (${stats.missedPercentage.toFixed(2)}%)\n`;
        
        if (stats.averageResponseTime !== null) {
          message += `–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${stats.averageResponseTime} –º–∏–Ω—É—Ç\n`;
        }
        
        await ctx.reply(message, {
          parse_mode: 'Markdown',
          ...KeyboardBuilder.mainMenu()
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—á–µ—Ç–æ–≤:', error);
        await ctx.reply(
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—á–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
          KeyboardBuilder.mainMenu()
        );
      }
    });
  }
}