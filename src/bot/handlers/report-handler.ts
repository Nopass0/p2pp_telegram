import { Context } from 'telegraf';
import { message } from 'telegraf/filters';
import type { BotContext } from '@/types';
import { NotificationService } from '@/services/notification-service';
import { UserService } from '@/services/user-service';
import { KeyboardBuilder } from '../components/keyboard';
import { parseCSVBuffer } from '@/services/csv-parser';
import axios from 'axios';
import { TransactionService } from '@/services/transaction-service';
import { BybitParser } from '@/services/bybit-parser';
import { BybitTransactionService } from '@/services/bybit-transaction-service';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
 */
export class ReportHandler {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞–º–∏
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: any) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
    bot.hears('üí∏ Telegram –∫–æ—à–µ–ª–µ–∫', this.startTelegramReportUpload);
    bot.hears('üìä Bybit', this.startBybitReportUpload);
    bot.hears('‚ùå –û—Ç–º–µ–Ω–∞', this.cancelReportUpload);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
    bot.on(message('document'), this.handleReportUpload);
  }
  
  /**
   * –û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞
   */
  private static async cancelReportUpload(ctx: BotContext) {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.lastAction = undefined;
    
    await ctx.reply(
      '‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.',
      ctx.session?.isAdmin ? KeyboardBuilder.adminMainMenu() : KeyboardBuilder.mainMenu()
    );
  }
  
  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞ Telegram
   */
  private static async startTelegramReportUpload(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session.userId) {
      await ctx.reply('–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç—á–µ—Ç Telegram"
    ctx.session.lastAction = 'waiting_telegram_report';
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const lastNotification = await NotificationService.getLastNotification(ctx.session.userId);
    
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ CSV-—Ñ–∞–π–ª –∏–∑ –±–æ—Ç–∞ @wallet –∏–ª–∏ –¥—Ä—É–≥–æ–π P2P-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.\n\n' +
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n' +
      '- CSV —Ñ–∞–π–ª (–ø–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞)\n' +
      '- Excel —Ñ–∞–π–ª—ã (.xls, .xlsx) (–±–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞)',
      KeyboardBuilder.cancelKeyboard()
    );
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Ç–º–µ—á–∞–µ–º –µ–≥–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
    if (lastNotification && !lastNotification.reportReceived) {
      await NotificationService.markReportReceived(lastNotification.id);
    }
  }
  
  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –¥–ª—è Bybit
   */
  private static async startBybitReportUpload(ctx: BotContext) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session.userId) {
      await ctx.reply('–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–µ—Ç –æ—Ç—á–µ—Ç Bybit"
    ctx.session.lastAction = 'waiting_bybit_report';
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const lastNotification = await NotificationService.getLastNotification(ctx.session.userId);
    
    await ctx.reply(
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ XLS-—Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π Bybit.\n\n' +
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–∞ .xls',
      KeyboardBuilder.cancelKeyboard()
    );
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Ç–º–µ—á–∞–µ–º –µ–≥–æ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
    if (lastNotification && !lastNotification.reportReceived) {
      await NotificationService.markReportReceived(lastNotification.id);
    }
  }
  
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
   */
  private static async handleReportUpload(ctx: BotContext, next: () => Promise<void>) {
    // –ï—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
    if (
      ctx.session.lastAction !== 'waiting_telegram_report' && 
      ctx.session.lastAction !== 'waiting_bybit_report'
    ) {
      return next();
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (!ctx.session.userId) {
      await ctx.reply('–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É "üîë –í–≤–µ—Å—Ç–∏ –∫–æ–¥".');
      ctx.session.lastAction = undefined;
      return;
    }
    
    const document = ctx.message.document;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
    const fileName = document.file_name.toLowerCase();
    let isValidExtension = false;
    
    if (ctx.session.lastAction === 'waiting_telegram_report') {
      // –î–ª—è Telegram –∫–æ—à–µ–ª—å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã CSV, XLS, XLSX
      isValidExtension = ['.csv', '.xls', '.xlsx'].some(ext => fileName.endsWith(ext));
      
      if (!isValidExtension) {
        await ctx.reply(
          '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV, XLS –∏–ª–∏ XLSX.',
          KeyboardBuilder.cancelKeyboard()
        );
        return;
      }
    } else if (ctx.session.lastAction === 'waiting_bybit_report') {
      // –î–ª—è Bybit —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ XLS
      isValidExtension = fileName.endsWith('.xls');
      
      if (!isValidExtension) {
        await ctx.reply(
          '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ XLS.',
          KeyboardBuilder.cancelKeyboard()
        );
        return;
      }
    }
    
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
      await ctx.reply('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–∞...');
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
      const fileLink = await ctx.telegram.getFileLink(document.file_id);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
      const response = await axios({
        method: 'get',
        url: fileLink.href,
        responseType: 'arraybuffer'
      });
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –±—É—Ñ–µ—Ä
      const fileBuffer = Buffer.from(response.data);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
      if (ctx.session.lastAction === 'waiting_telegram_report') {
        await ReportHandler.processTelegramReport(ctx, document, fileBuffer);
      } else if (ctx.session.lastAction === 'waiting_bybit_report') {
        await ReportHandler.processBybitReport(ctx, document, fileBuffer);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞:', error);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      await ctx.reply(
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –¥–∞–Ω–Ω—ã–µ.`,
        KeyboardBuilder.mainMenu()
      );
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.lastAction = undefined;
    }
  }
  
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç—á–µ—Ç –∫–æ—à–µ–ª—å–∫–∞ Telegram
   */
  private static async processTelegramReport(ctx: BotContext, document: any, fileBuffer: Buffer): Promise<void> {
    // –î–ª—è CSV —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä—Å–µ—Ä
    if (document.file_name.toLowerCase().endsWith('.csv')) {
      // –ü–∞—Ä—Å–∏–º CSV —Ñ–∞–π–ª
      const parsedData = await parseCSVBuffer(fileBuffer);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      const result = await TransactionService.saveTransactions(ctx.session.userId, parsedData.transactions);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
      const statsText = `
üìä *–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π*
      
‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${result.added}
‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è: ${result.duplicates}
      
*–°–≤–æ–¥–∫–∞:*
- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${parsedData.summary.totalTransactions}
- –ê–∫—Ç–∏–≤—ã: ${Object.keys(parsedData.summary.totalAmount).join(', ')}`;
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–º–µ—á–∞–µ–º –æ—Ç—á–µ—Ç –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π
      const lastNotification = await NotificationService.getLastNotification(ctx.session.userId);
      
      if (lastNotification && !lastNotification.reportReceived) {
        await NotificationService.markReportReceived(lastNotification.id);
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.lastAction = undefined;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
      await ctx.reply(
        `‚úÖ –§–∞–π–ª "${document.file_name}" —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\n\n${statsText}`,
        { 
          parse_mode: 'Markdown',
          ...KeyboardBuilder.mainMenu() 
        }
      );
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ - –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      await ctx.reply(
        `‚úÖ –§–∞–π–ª "${document.file_name}" –ø—Ä–∏–Ω—è—Ç –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –ø–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è CSV —Ñ–∞–π–ª–æ–≤.`,
        KeyboardBuilder.mainMenu()
      );
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–º–µ—á–∞–µ–º –æ—Ç—á–µ—Ç –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π
      const lastNotification = await NotificationService.getLastNotification(ctx.session.userId);
      
      if (lastNotification && !lastNotification.reportReceived) {
        await NotificationService.markReportReceived(lastNotification.id);
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.lastAction = undefined;
    }
  }
  
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç—á–µ—Ç Bybit
   */
  private static async processBybitReport(ctx: BotContext, document: any, fileBuffer: Buffer): Promise<void> {
    try {
      // –ü–∞—Ä—Å–∏–º XLS —Ñ–∞–π–ª
      const parsedData = await BybitParser.parseXLSBuffer(fileBuffer);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      const result = await BybitTransactionService.saveTransactions(ctx.session.userId, parsedData.transactions);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
      const statsText = `
üìä *–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π Bybit*
      
‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${result.added}
‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è: ${result.duplicates}
      
*–°–≤–æ–¥–∫–∞:*
- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${parsedData.summary.totalTransactions}
- –ê–∫—Ç–∏–≤—ã: ${Object.keys(parsedData.summary.totalAmount).join(', ')}`;
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–º–µ—á–∞–µ–º –æ—Ç—á–µ—Ç –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π
      const lastNotification = await NotificationService.getLastNotification(ctx.session.userId);
      
      if (lastNotification && !lastNotification.reportReceived) {
        await NotificationService.markReportReceived(lastNotification.id);
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.lastAction = undefined;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
      await ctx.reply(
        `‚úÖ –§–∞–π–ª "${document.file_name}" —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\n\n${statsText}`,
        { 
          parse_mode: 'Markdown',
          ...KeyboardBuilder.mainMenu() 
        }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ Bybit:', error);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      await ctx.reply(
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ Bybit: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –¥–∞–Ω–Ω—ã–µ.`,
        KeyboardBuilder.mainMenu()
      );
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.lastAction = undefined;
    }
  }
  
  /**
   * –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–æ–≤
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static async sendReportReminders(bot: any) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
      const usersForReminder = await NotificationService.getUsersForReminder();
      
      for (const { user, shouldNotify } of usersForReminder) {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if (!shouldNotify) {
          continue;
        }
        
        // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if (!user.telegramAccounts || user.telegramAccounts.length === 0) {
          continue;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = await NotificationService.createReportNotification(user.id);
        
        if (!notification) {
          continue;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ Telegram –∞–∫–∫–∞—É–Ω—Ç—ã
        for (const account of user.telegramAccounts) {
          try {
            await bot.telegram.sendMessage(
              account.telegramId,
              `‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É "üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç".`,
              {
                parse_mode: 'Markdown',
                ...KeyboardBuilder.mainMenu()
              }
            );
          } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${account.telegramId}:`, error);
          }
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', error);
    }
  }
}