import { Telegraf } from 'telegraf';
import { BotContext } from '@/types';
import { NotificationService } from './notification-service';
import { AdminService } from './admin-service';
import { UserService } from './user-service';
import { WorkSessionService } from './work-session-service';
import { KeyboardBuilder } from '../bot/components/keyboard';

/**
 * –°–µ—Ä–≤–∏—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á –¥–ª—è –±–æ—Ç–∞
 */
export class SchedulerService {
  private static bot: Telegraf<BotContext>;
  private static notificationInterval: NodeJS.Timeout;
  private static sessionCheckInterval: NodeJS.Timeout;

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á–∏
   * @param bot –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
   */
  static init(bot: Telegraf<BotContext>) {
    this.bot = bot;

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –∑–∞–¥–∞—á
    this.startNotificationScheduler();
    this.startSessionCheckScheduler();

    console.log('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω');
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
   */
  static stop() {
    if (this.notificationInterval) {
      clearInterval(this.notificationInterval);
    }
    if (this.sessionCheckInterval) {
      clearInterval(this.sessionCheckInterval);
    }
    console.log('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  private static startNotificationScheduler() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    this.notificationInterval = setInterval(async () => {
      try {
        await this.checkAndSendNotifications();
        await this.checkAndNotifyAdmins();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      }
    }, 60 * 1000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–π
   */
  private static startSessionCheckScheduler() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–π —á–∞—Å
    this.sessionCheckInterval = setInterval(async () => {
      try {
        await this.checkAndCloseInactiveSessions();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–π:', error);
      }
    }, 60 * 60 * 1000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
   */
  private static async checkAndSendNotifications() {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    const usersForReminder = await NotificationService.getUsersForReminder();

    for (const { user, shouldNotify, lastNotification } of usersForReminder) {
      if (shouldNotify && user.telegramAccounts.length > 0) {
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const notification = await NotificationService.createReportNotification(user.id);

        if (notification) {
          // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          const settings = await AdminService.getSystemSettings();
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç–∞–º
          for (const telegramAccount of user.telegramAccounts) {
            try {
              await this.bot.telegram.sendMessage(
                telegramAccount.telegramId,
                `‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–∞*\n\n` +
                `–£–≤–∞–∂–∞–µ–º—ã–π ${user.name}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç –æ P2P —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö.\n\n` +
                `–ï—Å–ª–∏ –æ—Ç—á–µ—Ç –Ω–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ ${settings?.reportWaitTime || 10} –º–∏–Ω—É—Ç, ` +
                `–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–∏—Å—Ç–µ–º—ã –±—É–¥—É—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—ã.`,
                { 
                  parse_mode: 'Markdown',
                  reply_markup: KeyboardBuilder.mainMenu().reply_markup
                }
              );
              
              console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.name} (${telegramAccount.telegramId})`);
              
              // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —ç—Ç–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
              this.scheduleAdminNotificationCheck(notification.id, settings?.reportWaitTime || 10);
            } catch (error) {
              console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramAccount.telegramId}:`, error);
            }
          }
        }
      }
    }
  }

  /**
   * –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
   * @param notificationId ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   * @param waitTimeMinutes –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ –º–∏–Ω—É—Ç–∞—Ö
   */
  private static scheduleAdminNotificationCheck(notificationId: number, waitTimeMinutes: number) {
    setTimeout(async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = await NotificationService.getNotificationById(notificationId);
        
        // –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ—Ç—á–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –µ—â–µ –Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã
        if (notification && !notification.reportReceived && !notification.adminNotified) {
          // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω—ã
          await NotificationService.markAdminNotified(notificationId);
          
          // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const user = await UserService.findUserById(notification.userId);
          
          if (user) {
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            await this.notifyAdminsAboutMissedReport(user, notification);
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', error);
      }
    }, waitTimeMinutes * 60 * 1000); // –ü–µ—Ä–µ–≤–æ–¥–∏–º –º–∏–Ω—É—Ç—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
  }

  /**
   * –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–º –æ—Ç—á–µ—Ç–µ
   * @param user –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –æ—Ç—á–µ—Ç
   * @param notification –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  private static async notifyAdminsAboutMissedReport(user: any, notification: any) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
      const admins = await AdminService.getAllAdmins();
      
      if (admins.length === 0) {
        console.log('–ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        return;
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—Ç—á–µ—Ç–∞
      const message = `‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!*\n\n` +
        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *${user.name}* (ID: ${user.id}) –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –æ—Ç—á–µ—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É.\n\n` +
        `–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ${new Date(notification.notificationTime).toLocaleString('ru-RU')}\n\n` +
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
      for (const admin of admins) {
        try {
          await this.bot.telegram.sendMessage(
            admin.telegramId,
            message,
            { 
              parse_mode: 'Markdown',
              reply_markup: {
                inline_keyboard: [
                  [{ text: `üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`, callback_data: `user_${user.id}` }]
                ]
              }
            }
          );
          
          console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegramId} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegramId}:`, error);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–º –æ—Ç—á–µ—Ç–µ:', error);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–µ–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞—Ö
   */
  private static async checkAndNotifyAdmins() {
    // –ü–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const pendingNotifications = await NotificationService.getPendingAdminNotifications();

    if (pendingNotifications.length > 0) {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
      const admins = await AdminService.getAllAdmins();

      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const userNotifications = new Map<number, typeof pendingNotifications>();
      
      for (const notification of pendingNotifications) {
        if (!userNotifications.has(notification.userId)) {
          userNotifications.set(notification.userId, []);
        }
        userNotifications.get(notification.userId)!.push(notification);
        
        // –û—Ç–º–µ—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        await NotificationService.markAdminNotified(notification.id);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
      for (const admin of admins) {
        try {
          // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤—à–∏—Ö –æ—Ç—á–µ—Ç—ã
          let message = `‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!*\n\n` +
            `–°–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç—á–µ—Ç—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è:\n\n`;

          const userButtons = [];
          
          for (const [userId, notifications] of userNotifications.entries()) {
            const user = await UserService.findUserById(userId);
            if (user) {
              const notificationTimes = notifications
                .map(n => new Date(n.notificationTime).toLocaleString('ru-RU'))
                .join(', ');
              
              message += `*${user.name}* (ID: ${userId})\n` +
                `–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${notificationTimes}\n\n`;
              
              // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              userButtons.push([{ text: `üëÅÔ∏è ${user.name}`, callback_data: `user_${userId}` }]);
            }
          }

          await this.bot.telegram.sendMessage(
            admin.telegramId,
            message,
            { 
              parse_mode: 'Markdown',
              reply_markup: {
                inline_keyboard: userButtons
              }
            }
          );
          
          console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${admin.telegramId}`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegramId}:`, error);
        }
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
   */
  private static async checkAndCloseInactiveSessions() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ —Å –Ω–∞—á–∞—Ç—ã–µ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
    const activeSessions = await WorkSessionService.getOldActiveSessions(24);

    for (const session of activeSessions) {
      try {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
        await WorkSessionService.completeSession(session.id);
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—ã
        const user = await UserService.findUserById(session.userId);
        
        if (user && user.telegramAccounts.length > 0) {
          // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–∏
          for (const telegramAccount of user.telegramAccounts) {
            try {
              await this.bot.telegram.sendMessage(
                telegramAccount.telegramId,
                `‚ÑπÔ∏è *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏*\n\n` +
                `–í–∞—à–∞ —Ä–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–æ–π, ` +
                `–ø–æ—Å–∫–æ–ª—å–∫—É –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏.`,
                { 
                  parse_mode: 'Markdown',
                  reply_markup: KeyboardBuilder.mainMenu().reply_markup
                }
              );
            } catch (telegramError) {
              console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramAccount.telegramId}:`, telegramError);
            }
          }
        }
        
        console.log(`–†–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è ID:${session.id} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ ID:${session.id}:`, error);
      }
    }
  }
}